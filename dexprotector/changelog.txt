11.0.77
======
CODE PROTECTION
- Improved the native String Encryption mechanism

11.0.39
======
ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Improved detection mechanisms for Frida and Liberty Lite (iOS platform) 

11.0.37
======
ANDROID PLATFORMS
- Added support for Android 11 Beta 1

11.0.33
======
DEVELOPMENT PLATFORM SUPPORT
- Added support for Android Studio/Android Gradle Plugin 4.0

11.0.27
======
ANDROID PLATFORMS
- Improved support for Android 11 (R)

APPLICATION FRAMEWORKS
- It is now possible to protect/encrypt JavaScript bundles with WhiteBox Crypto for ReactNative-based apps (iOS)
- Implemented a new mechanism to protect JavaScript code in Cordova-based apps (iOS)
- Added support for the latest versions of Unity Engine

DEVELOPMENT PLATFORM SUPPORT
- Added support for Android Studio/Android Gradle Plugin 3.6
- New signing option for the legacy certificate replacement scheme (Android)
- Added support for V3 Signing Scheme (Android)
- Support for macOS Catalina and XCode 11.4/11.5
- Added support for Java Runtime Environment 9 and later versions

RASP ENGINE (Android)
- Automatic integration with Licel Attack Telemetry and Threat Intelligence Service (Alice)
- Reinforced Integrity Control mechanisms
- Improved bytecode anti-dumping technique
- Improved Class Encryption runtime mechanism for Android 8/8.1/10
- Optimized load time for large native libraries protected with Native Library Encryption

CI/CD PIPELINE
- Enhanced integration of debug information(dSYM, BCSybmolMap) with Crashlitycs (iOS)

CODE PROTECTION
- Improved security, performance, and size effectiveness for the new native String Encryption Engine for Android apps and Libraries/SDKs
- Fixed issues with String Encryption for SWIFT apps (iOS)
- Implemented obfuscation for SWIFT class structures (iOS)

CONTENT PROTECTION
- Resource Encryption for iOS apps and Frameworks

CRYPTOMODULE
- Introduced a new operation mode - SmartCard Emulation
- Added the all-new anti-intrusion mechanism

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Automatic integration with Licel Attack Telemetry and Threat Intelligence Service (Alice)
- Integrity Control Scheme for encrypted resources (iOS)
- Fixed false positive detection of the Nox Emulator (Android)
- New detection mechanism for EdXposed

SSL/HPKP PINNING
- Added Trusted Anchor support as a part of Certificate Transparency Technology

11.0.1
======
CODE PROTECTION
- New re-inforced native String Encryption mechanism 
 
10.1.51
======
ANDROID PLATFORMS
- Improved support for Android 11 (DP1/2/3)
- Legacy certificate support added 
- Performance optimizations for all the protection mechanisms

IOS PLATFORM
- Added support for macOS Catalina and XCode 11.4.1
- Added experimental resource encryption functionality

CODE PROTECTION
- Reinforced Class Encryption mechanism

CRYPTO MODULE
- Reinforced internal mechanisms

SSL/HPKP PINNING
- Added support for Trusted Anchors

CONTENT PROTECTION
- Reinforced Resource Encryption
- Added experimental resource encryption functionality for iOS
- Game Engines Support
    - Added support for latest versions of Unity

INTEGRITY CONTROL
- Reinforced native tamper-proofing mechanisms 

10.1.51
======
ANDROID PLATFORMS
- Performance optimizations (Android 8, 8.1, 10 and 11)
- Added support for Android 11 (DP1/2)

CODE PROTECTION
- Class Encryption: New anti-dumping mechanism (runtime)

APPLICATION FRAMEWORKS
- Improved Support for Unity 2019

10.1.9
======
IOS PLATFORM
- ReactNative-based applications are now supported (JS Code Obfuscation, Native WhiteBox String Encryption for JavaScript Code)

10.0.11
======
ANDROID PLATFORMS
- Improved support for the final builds of Android 10

TARGET TYPES
- Android Application Bundles 
    - Fixed issues with processing specific types of archives
- Android Libraries 
    - Added support for multiple protected AARs used in the same application
- IOS
    - Added support for protecting XCode Archives (.xcarchive files)
    - New protection mechanism for Frameworks embedded in iOS applications

DEVELOPMENT PLATFORM SUPPORT
- Android Studio and Android Gradle Plugin 3.6 beta01 support
- R8: Static method merging and Method outlining support
- XCode 11 support

RESOURCE ENCRYPTION
- Added ability to encrypt resources which are located out of standard assets and res folders (APK, AAB)

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- New CustomFirmware Detection Mechanism (Android)
- New Integrity Control Mechanisms for Apple Store/AdHoc/Enterprise Distribution schemes (iOS)

9.7.27
======
DEVELOPMENT PLATFORM SUPPORT
- Android Studio 3.5 support has been added          

9.7.11
======
ANDROID PLATFORMS
- Fixed issues with R8

9.7.9
======
ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Environment Checks' configuration mechanism has been standartized for Android and iOS platforms

IOS PLATFORM
- Fixed issues with iOS Frameworks written in Swift 

9.7.7
======
TARGET TYPES
- Android Application Bundles:
    - Fixed issues with AndroidX resources (when the Resource Encryption is enabled)

IOS PLATFORM
- Support for rare ARM32 devices

9.7.1
======
ANDROID PLATFORMS
- Fixed issues with Android 9 on Vivo devices
- New logic to work with x86/x86_64 devices

IOS PLATFORM
- New bitcode obfuscation algorithm
- Added debugger detection

TARGET TYPES
- Android Libraries:
  - Support for the latest Kotlin version
  - Fixed problems with native HideAccess engine
  - Resolved issues with multiple protected AARs in one APK

ANDROID MANIFEST MANGLING
- Re-designed AndroidManifertMangling engine

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Improved performance of the checks
- Added the new Nox player detection algorithm
- Added debugger detection for IOS platform
- Support for Frida detection on Android Q4

CRYPTO MODULE
- Added an API for using CryptoModule from pure native libs
- Improved support for Mastercard MBCP library protection

9.5.19
======
ANDROID PLATFORMS
- Added support for Android Q Beta 4

9.5.11
======
IOS PLATFORM
- Improvements

CONTENT PROTECTION
- New mechanisms are used now for AndroidManifest.xml mangling

9.3.27
======
ANDROID PLATFORMS
- Dropped support for Android Q Beta 1
- Added support for Android Q Beta 2

TARGET TYPES
- Android Libraries:
    - Fixed issue that was preventing use of protected AARs in applications that do not have Application class  

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Improved performance of the root check

9.3.21
======
ANDROID PLATFORMS
- Added support for Android Q Beta

IOS PLATFORM
- Improved .Framework processing

TARGET TYPES
- Android Libraries:
    - Improved support for Java 8

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Added support for Android Application Bundles (integrity check)

9.3.9
======
IOS PLATFORM
- The performance of String Encryption and Hide Access mechanisms was optimized
- Transparent support for SSL/HPKP Pinning for WKWebView and URLSession
- Added new protection mechanism - Objective-C code obfuscation

TARGET TYPES
- Official support for Android Application Bundles
- Android Libraries:  
    - Hide Access with Native invokedynamic Engine is now available for AARs
    - Class Encryption with Native Engine is now available for AARs
    - Desugaring support for Java 8 classes      

DEVELOPMENT PLATFORM SUPPORT
- DexProtector Gradle Plugin now is capable of protecting Android Application Bundles

CONTENT PROTECTION
- Added ability to filter classes for AndroidManifest.xml mangling 

CODE PROTECTION
- Class Encryption mechanism is now capable of working with multiple encrypted containers

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- It is now possible to obfuscate names of callback methods 
- Added ability to specify a custom list of APK/AAR content's items for Integrity Control's checks

SSL/HPKP PINNING
- iOS Platform's support is added. The same configuration format works both for Android and iOS platforms
- Added support for HTTP Tunneling with HTTP CONNECT

UPGRADE NOTES 9.3.7
================
ENVIRONMENT CHECKS / INTEGRITY CONTROL
- As the `data` parameter DexProtector now passes a java.lang.String object which contains JSON data to callback methods (negative/positive)

TARGET TYPES
- Android Libraries
    - Class Encryption uses Native Engine by default now. That can increase the size of the protected AAR

DEVELOPMENT PLATFORM SUPPORT
- DexProtector Gradle Plugin uses the new structure of placing logs:
`build/outputs/dexprotector/<buildType>/<artifactName>`
instead of
`build/outputs/dexprotector/<buildType>`

9.1.5
======
IOS PLATFORM
- Added support for applications built with earlier versions of XCode
- Improved protection mechanisms for SWIFT applications

TARGET TYPES
- Added experimental support for AABs (Android Application Bundles)
- Improved AAR protection mechanisms

RUNTIME APPLICATION SELF-PROTECTION (RASP)
- Fixed incorrect behavior of internal protection mechanisms for Android Emulator (x86_64)

DEVELOPMENT PLATFORM SUPPORT
- Android Studio 3.4 support has been improved

CONTENT PROTECTION
- Re-engineered Resource Encryption mechanism (new cryptographic and compression algorithms)

CODE PROTECTION
- Experimental support for Kotlin meta-data structures' protection and shrinking

ENVIRONMENT CHECKS / INTEGRITY CONTROL
- Added detections of the latest versions of Magisk
- Added ability to cause a native crash if environment checks are positive
- Fixed JSON reports that are passed to callback methods of environment checks

SSL/HPKP PINNING
- It is now possible to use external res/xml network_security_config.xml for Android Libraries (AARs)


9.0.37
======
ANDROID PLATFORMS
- The support for iOS Applications and Frameworks has been improved
TARGET TYPES
- Improved support for AARs and Android 9
APPLICATION FRAMEWORKS
- Improved Resource Encryption for Unity
ENVIRONMENT CHECKS/INTEGRITY CONTROL
- Reinforced Root checks
SSL PINNING
- Added support for latest versions of okhttp3  


9.0.11
======
ANDROID PLATFORMS
- Android 9 (P) is officially supported
- iOS support is added 
- Minor Fixes

TARGET TYPES
- Android Libraries: It is now possible to set android:authorities of an AAR via the autoInitAuthorities attribute of the aar tag (DexProtector's configuration file). This resolves a potential conflict with the different applications using the same protected library installed on the same device

CONTENT PROTECTION
- AndroidManifest.xml mangling was improved

9.0.7
======
ANDROID PLATFORMS
- Improved support for Android P Beta PPP4

ENVIRONMENT CHECKS/INTEGRITY CONTROL
- Reinforced Root checks
- The <xposed/> tag has been replaced with <hooks/>
- Improved checks for Frida and Drozer

9.0.1
======
ANDROID PLATFORMS
- Improved support for Android P Beta (Developer Preview 3 / PPP3)
(WARNING: Only the latest versions of Android Developer Preview are supported - PPP2/PPP3)
DEVELOPMENT PLATFORM SUPPORT
- Added support for Android Gradle Plugin Alpha (3.2 alpha 18)
CODE PROTECTION
- Added automatic splitting of the main classes.dex if the number of references in the DEX is higher than 60K, the application is already MultiDex, and the API level >= 21. Thus DexProtector can free up space for its code that gets injected into the main classes.dex.

8.1.99
======
ANDROID PLATFORMS
- Added support for Android P Beta (Developer Preview 2 / PPP2)
(WARNING: Only the latest version of Android Developer Preview is supported - PPP2)  
 
DEVELOPMENT PLATFORM SUPPORT
- Added support for Android Gradle Plugin 3.2

8.1.97
======
ANDROID PLATFORMS
- Added support for Android P

DEVELOPMENT PLATFORM SUPPORT
- Added support for Android Studio 3.1
- Added support for Android Gradle Plugin 3.1
- Improved compatibility with new dex compiler/minimizer - D8/R8

TARGET TYPES
- Android Libraries: New automatic initialization mechanism  
- Xamarin Applications: Improved compatibility

CODE PROTECTION
- Hide Access: Transparent stack traces

RUNTIME APPLICATION SELF-PROTECTION (RASP)
- A new security policy is now in force for the initialization of DexProtector’s engine

ENVIRONMENT CHECKS/INTEGRITY CONTROLS
- Updated detection patterns for Magisk in Root Detection
- Updated Wireless Security Status Monitoring
- Updated detection patterns for Emulator Detection

8.1.37
======
ANDROID PLATFORMS
- Added support for Android 8.1

DEVELOPMENT PLATFORM SUPPORT
- Added support for Android Studio 3
- Fixed compatibility issues with Dynatrace Application Monitoring

SSL/HPKP PINNING
- Added support for applications made with CrossWalk

CODE PROTECTION
- Added stripping for logging methods

CONTENT PROTECTION
- Added string/string-array encryption (resources.arsc)

8.1.11
======
ANDROID PLATFORMS
- Improved compatibility with previous generations of Amazon devices
- Improved compatibility with devices running on custom firmwares

TARGET TYPES
- Android Libraries: Added support for SSL/HPKP Pinning, improved Native Library Encryption mechanism

RUNTIME APPLICATION SELF-PROTECTION (RASP)
- Improved Native/Java debugger defending mechanisms

ENVIRONMENT CHECKS/INTEGRITY CONTROLS
- Updated detection patterns
- Added an ability to receive a detailed report of the checks’ results, which can be evaluated on the server side

DEVELOPMENT PLATFORM SUPPORT/PLATFORM FRAMEWORKS
- Added transparent support for Google Play App Signing and Amazon App Store Signing
- Added support for Android Gradle Plugin 3

8.0.5
======
ANDROID PLATFORMS
- Added support for Android O Developer Preview 2

DEVELOPMENT PLATFORM SUPPORT
- Improved compatibility with libraries and applications written in Kotlin
- Added support for APK Signature Scheme v2

CODE PROTECTION
- The following mechanisms were optimized for large applications:
    - CallHiding via Native invokedynamic Engine
    - Field Access and Field Types Hiding via Native invokedynamic Engine
- Security improvements against dynamic analysis
- New reinforced native library protection mechanism (Native Code Encryption, available in the Enterprise version)

MODULES
- Android Java Crypto Module [Enterprise]:  
A native implementation of Secure Execution Environment (SEE) with optional support for WhiteBoxCrypto was added. All the cryptographical operations and keys are moved into SEE at the protection phase. Which protects against runtime analysis of crypto algorithms used in the application and prevents leaks of keys. Please contact us for more details.

7.1.17
======
ANDROID APPLICATIONS
- Increased startup speed (cold/subsequent) of protected applications
- Fixed issues occured on devices running rare versions of Android

ANDROID APPLICATION LIBRARIES (AAR)
- Added support for Native Code Encryption
- Added support for Native Code Obfuscation
- Added default settings for Environment Checks
- Improved performance of Hide Access for libraries that have large number of methods

7.1.12
======
TARGET TYPES
- AARs: Improved performance of Hide Access mechanism

ENVIRONMENT CHECKS/INTEGRITY CONTROLS
- Improved performance of the detects. Updated detection patterns. Implemented a mechanism that allows to see detailed reports of the checks. Fixed issues with Public Key Pinning.

DEVELOPMENT PLATFORMS SUPPORT
- Added more detailed diagnostic messages if a protection configuration is incorrect.
- DexProtector Gradle Plugin improved

7.1.11
======
ENVIRONMENT CHECKS
- Improved performance

7.1.1
======
ANDROID PLATFORMS
- Support for Android 7.1 added
- Improved support for custom builds such as CyanogenMod

7.0.9
======
ANDROID PLATFORMS
- Added support for official Android 7 (Nougat): Improvements, fixed issues leading to warnings and error messages in the log of system messages 
- Improvements of the CallHiding via Native invokedynamic Engine on x86 devices with Android 6.0.1 

CODE PROTECTION
- All the protection mechanisms were significantly optimized - protected applications start and work faster

DEVELOPMENT PLATFORMS SUPPORT
- Added support for Android Plugin for Gradle 2.2.0

6.5.7
======
ANDROID PLATFORMS
- The support for Android N (Developer Preview 4) has been improved

CODE PROTECTION
- Native Library Encryption: Added support for x86 arch on Android N

6.5.5
======
ANDROID PLATFORMS
- Added support for Android N Developer Preview 3

DEVELOPMENT PLATFORMS SUPPORT 
- All the Maven artifacts are now shipped within the distribution package. Please follow https://dexprotector.com/docs#maven-plugin to install them into your local repository
- Fixed error with incorrect work under certain versions of MacOS X
- Fixed incorrect rendering of the GUI in Windows
- Fixed error with incorrect behavior of DexProtector GUI with the Resource Encryption settings

CODE PROTECTION
- Improved start-up speed of protected applications
- Optimized the secure string encryption's code size
- Added support for arm64-v8a architecture (Native Code Obfuscation)
- Optimized size of encrypted and obfuscated native libraries 

6.3.15
======
SSL PINNING
- SSL Pinning has been extended to meet RFC7469 - Public Key Pinning Extension for HTTP standard.
- Reporting Pin Validation Failure mechanism has been implemented.
- Added support for Network Security Configuration - http://developer.android.com/preview/features/security-config.html from Android N.

PERSONALIZATION PROFILE
- Added Personalization Profile that allows to use custom settings for protection mechanisms (names of encrypted files, libraries, etc.).

CODE PROTECTION
- String Encryption engine has been significantly improved.
- Added ability to transparently encrypt native libraries that contain JNI methods (Native Library Encryption).

CONTENT PROTECTION
- Resource Name Obfuscation now supports all the files from the res folder.
- Added ability to use encrypted resources from applications and native libraries (Resource Encryption) from assets/res folders.
- Added support for Class::getResourceAsStream to work with encrypted resources (assets).
- Improved compatibility of Resource Encryption with WebView, Cordova/PhoneGap. Added ability to work with local encrypted resources (assets) in CrossOrigin requests.

ENVIRONMENT CHECKS
- Added new probes for Root/Debug Detection

6.1.1
=====
DEVELOPMENT PLATFORMS SUPPORT
- Added new mechanism of configuring DexProtector Gradle Plugin. Now it is possible to enable DexProtector’s task for any required buildType.
- DexProtector’s log files are now located in build/outputs/dexprotector/<buildType>/log.txt

ANDROID APPLICATION LIBRARIES (AAR)
- Fixes issues that were related to filters' settings (all/annotations)
- Fixed issues related to the injection of protection methods
- Added ability to use original class names and method names (before ProGuard) for setting initialisation methods
- Now DexProtector generates unique file names for files that contain encrypted classes

ANDROID APPLICATIONS
- Fixed issues related to processing of secondary dex files in case if the package in a main classes.dex is duplicated in a secondary dex file

ANDROID PLATFORM APPLICATIONS
- Added new mechanism of loading native DexProtector’s protection libraries in order to support Security Enhanced Android

INTEGRITY CONTROL
- Added ability to control necessity of checking signature’s certificate under an APK file

6.0.9
=====
 - Added support for product flavorous in the Gradle plugin, minor fixes
 - Delayed signature mechanism has been fixed

6.0.0
=====
- Added support for Android 6.0
- Improved Integrity Control mechanism
- Enhanced Hide Access mechanism
- Added recources.arsc obfuscation functionality
- Added Gradle plugin and integration with Android Studio
- DexProtector doesn’t require Android SDK installed

5.0.9
=====
- Android M Preview 2 support added
- Added experimental resource encryption support for WebView and frameworks based on Apache Cordova

5.0.8
=====
- Android M Preview support added

5.0.7
=====
- Android 5.1 support added
- Hide Access is now supporting arm64 architecture
- Issues related to Intel Atom architecture are fixed

5.0.3
=====
- Android 5.0 support added
- Fixed activation issue on rare Windows systems

5.0.0
=====
- Android L support added
- Hide Access is now supporting x86 architecture
- The new dex-processing engine “The Big Bang”, which speeds the protection up several times
- Added ability to use glob and regexp syntaxes and exclude patterns in the filters
- By default, the original debug info preserves in protected APKs
- Trial Policy is changed: you must specify a device that is to be used to run protected applications

4.9.7
=====
- Support for Android SDK Tools, Revision 23

4.9.6
=====
- StringEncryption/ClassEncryption/HideAccess/ResourceEncryption mechanisms have been re-engineered
- Support for ART 
- Added support for applications made with Basic4android
- License activation issue on Windows 8.1 fixed
- Fixed incorrect processing of empty tags from a configuration file

4.9.5
=====
- Added ability to use Proguard map files
- Configuration file format was extended, added keystore, alias, storepass, keypass parameters 
- ClassEncryption algorithm was modified

4.9.0
=====
- Support for Android SDK Tools, Revision 22.6
- Enhanced String Encryption Engine

4.8.0
=====
- Fixed issue with Class Encryption function and Kaspersky Mobile Antivirus
- A new native (ARM) implementation of Hide Access function, which works several times faster than Reflection/JNI
- ART support in progress

4.7.0
=====
- Added key alias name validation in the GUI
- A new accelerated mechanism of working with APK files
- Added support for non-standard structured APK files

4.6.0
=====
- Android 4.4 (KitKat) and Android SDK r22.3 support
- A new parameter DX_MEM for setting a memory amount to be used by Android Tools
- The ClassEncryption and HideAccess features are improved
- StringEncryption features performance is sped up

IMPORTANT: SOME OF THE FEATURES/FUNCTIONS/OPTIONS MENTIONED IN THIS CHANGELOG ARE AVAILABLE ONLY IN THE ENTERPRISE VERSION
